**** *n_01 *sex_2 *escolaridade_3 *estudante_1 *trabalha_1 *conhecimentouml_2 *conhecimentoalp_2
Modularização das classes. Sim, congelei classes que possuiam uma única característica. Ex.: configuration. Sim, possibilita ao usuário manter o que ele cosidera idela para a solução. Busco as soluções otimizadas que se enquadrem ao meu contexto de uso. Concordo parcialmente. 
**** *n_02 *sex_2 *escolaridade_2 *estudante_1 *trabalha_2 *conhecimentouml_3 *conhecimentoalp_1
Conteúdo das classes. Sim, Classe de inicialização, classe com conteúdos. Sim, Para que essas arquiteturas não sejam mais alteradas e reorganizadas. Busco as soluções melhor otimizadas independente do contexto de uso. Concordo parcialmente. Achei fantástico o desenvolvimento do projeto. Parabéns para os responsáveis pela pesquisa. Minha sugestão: poderia ser incluído uma palavra never para que a máquina nunca mais organizasse a estrutura daquela maneira.
**** *n_03 *sex_1 *escolaridade_1 *estudante_1 *trabalha_2 *conhecimentouml_2 *conhecimentoalp_2
Modularização de caracteristicas. sim, classe e interface nova congelada que permanecia (sem ligação) dentro de pacote novo. sim, pois permite mater características de interesse do usuário. Busco as soluções otimizadas que se enquadrem ao meu contexto de uso. Concordo parcialmente. congelar classe nova ou que foi movida de pacote faz com que as novas soluções mantenham essa classe, mas sem ligação.
**** *n_04 *sex_1 *escolaridade_1 *estudante_2 *trabalha_2 *conhecimentouml_2 *conhecimentoalp_2
Modularização de características. Sim, Classe Movement. Sim, Os elementos arquiteturais analisados subjetivamente podem ser mantidos nas soluções graças a este recurso. Busco as soluções otimizadas que se enquadrem ao meu contexto de uso. Concordo parcialmente. Durante a interação o processo de carregamento toma tempo. Alguns problemas de usabilidade. Mas a idéia de congelamento é interessante e parece fucionar de forma eficaz.
**** *n_05 *sex_1 *escolaridade_1 *estudante_1 *trabalha_2 *conhecimentouml_2 *conhecimentoalp_2
Sim, procurei dentro do possível avaliar a coerência dos elementos e suas associações, bem como observando a coesão entre as classes. Sim, nos dois casos foram mantidas as classes e seus respectivos atributos e métodos, no decorrer da iteração e nas arquiteturas resultantes. Sim, imaginando um cenário em que o usuário possa pré-selecionar o no decorrer da otimização indicar os elementos a serem mantidos, além de atender a vontade pessoal do usuário, creio que ajuda a poupar determinados processamentos que resultem em uma arquitetura resultante não interessante. Busco as soluções melhor otimizadas independente do contexto de uso. Concordo parcialmente. Agradeço o convite de participar do experimento. Apesar de compreender perfeitamente a dificuldade de conseguir participantes para experimentos em ES, penso que uma arquitetura talvez mais enxuta, um pouco mais reduzida, facilitaria a avaliação subjetiva, haja vista que busquei fazer a avaliação comparando conforme as arquiteturas foram geradas. No entanto, parabéns pelo trabalho.
**** *n_06 *sex_1 *escolaridade_2 *estudante_1 *trabalha_2 *conhecimentouml_2 *conhecimentoalp_2
Intermediário. Modularização de caracteristica. Sim, algumas classes como Match e Velocity se mantiveram nas soluções seguintes. Sim, acredito que dessa forma se mantem um base da arquitetura. . Busco as soluções otimizadas que se enquadrem ao meu contexto de uso. Concordo parcialmente. a interface do papyrus poderia permitir uma melhor visualização. 
**** *n_07 *sex_1 *escolaridade_3 *estudante_1 *trabalha_1 *conhecimentouml_1 *conhecimentoalp_1
Levei em consideração a Modularização de caracteristicas. Sim, A classe Velocity. sim, Porque otimiza o processo e posso impor ao sistema os meus critérios. Busco as soluções otimizadas que se enquadrem ao meu contexto de uso. Neutro. 
**** *n_08 *sex_1 *escolaridade_3 *estudante_2 *trabalha_2 *conhecimentouml_3 *conhecimentoalp_2
Coesão e Interação entre características. Sim, Um exemplo foi a interface de animação (IAnimationLoop). Sim, considerando que tais elementos não precisem ser modificados em iterações futuras. Assim, pode-se concentrar em outros elementos. Busco as soluções melhor otimizadas independente do contexto de uso. Concordo parcialmente. Para aqueles que não conhecem a abordagem associada com a ferramenta, a interação pode ser dificultada. Por outro lado, entendo que a interação é fácil para aqueles que conhecem a(s) abordagem(ns) associada(s) com a ferramenta.
**** *n_09 *sex_1 *escolaridade_2 *estudante_1 *trabalha_2 *conhecimentouml_2 *conhecimentoalp_2
A avaliação foi feita, principalmente, no que tange à modularização de características. Sim, É uma abordagem interessante visto que permite ao usuário preservar elementos que já estão de acordo com o que ele espera. Além disso, com o congelamento, pode-se evitar que estes elementos venham a sofrer alterações que possam impactá-los negativamente. Busco as soluções otimizadas que se enquadrem ao meu contexto de uso. Concordo parcialmente. 
**** *n_10 *sex_1 *escolaridade_1 *estudante_2 *trabalha_2 *conhecimentouml_1 *conhecimentoalp_1
Modularização de características e coesão. Sim, Uma das classes que permaneceram, entre várias, foi a Velocity. Sim, pois o assim a ferramenta pode se adaptar com o perfil do usuário. Busco as soluções melhor otimizadas independente do contexto de uso. Concordo parcialmente. 